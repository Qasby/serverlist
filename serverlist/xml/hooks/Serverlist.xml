<?xml version="1.0" encoding="utf-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name>Serverlist</hook_name>
      <hook_desc>Serverlist</hook_desc>
      <hook_author>Tadek</hook_author>
      <hook_email/>
      <hook_website/>
      <hook_update_check/>
      <hook_requirements><![CDATA[a:3:{s:21:"required_applications";a:0:{}s:20:"hook_php_version_min";s:1:"0";s:20:"hook_php_version_max";s:1:"0";}]]></hook_requirements>
      <hook_version_human>1.0</hook_version_human>
      <hook_version_long>1.0</hook_version_long>
      <hook_extra_data/>
      <hook_key>serverlist</hook_key>
      <hook_global_caches/>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>serverlist.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>listserver</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:11:"skin_boards";s:12:"skinFunction";s:18:"boardIndexTemplate";s:4:"type";s:2:"if";s:2:"id";s:13:"boardIndexTop";s:8:"position";s:11:"pre.startif";}]]></hook_data>
      <hooks_source><![CDATA[<?php

class listserver
{
	public $registry;
	
	public function __construct()
	{
		$this->registry = ipsRegistry::instance();
	}
	
	public function getOutput()
	{
		$classToLoad = IPSLib::loadLibrary( IPSLib::getAppDir('serverlist') . '/sources/classes/admin.php', 'admin', 'serverlist' );
        $this->registry->setClass( 'admin', new $classToLoad(  $this->registry ) );
		$this->admin = $this->registry->getClass('admin');
		return $this->admin->generateList();
	}
}]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings/>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_css/>
  <hookextras_replacements/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>
